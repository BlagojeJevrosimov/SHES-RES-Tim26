///////////////////////////////////////////////////////////
//  Battery.cs
//  Implementation of the Class Battery
//  Generated by Enterprise Architect
//  Created on:      13-May-2021 9:09:36 PM
//  Original author: Lenovo
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Runtime.Serialization;

namespace Common
{
    [DataContract]
    public class Battery
    {
        [DataMember]
        public virtual double Capacity { get; set; }
        [DataMember]
        public virtual string Id { get; set; }
        [DataMember]
        public virtual double MaxPower { get; set; }
        [DataMember]
        public virtual Enums.BatteryRezim State { get; set; }

        public Battery()
        {
            Capacity = 0;
        }

        ~Battery() { }

        /// 
        /// <param name="id"></param>
        /// <param name="maxPower"></param>
        /// <param name="capacity"></param>

        public Battery(double capacity, string id, double maxPower, Enums.BatteryRezim state)
        {
            if (id == null)
            {
                throw new ArgumentNullException("Od ne sme biti null!");
            }
            else
            {
                Id = id;
            }

            if (capacity >= 0)
            {
                Capacity = capacity;
            }
            else
            {
                throw new ArgumentOutOfRangeException("Kapacitet ne sme biti negativan broj!");
            }

            if (maxPower >= 0)
            {
                MaxPower = maxPower;
            }
            else
            {
                throw new ArgumentOutOfRangeException("Max power ne sme biti negativan broj!");
            }

            State = state;
        }

    }
}//end Battery